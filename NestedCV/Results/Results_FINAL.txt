Model = Support Vector Machine
BAcc = 0.9028 +- 0.0053
F1 = 0.8995 +- 0.0057
Recall = 0.8663 +- 0.0072
Precision = 0.9352 +- 0.0050
Mcc = 0.8074 +- 0.0105
Kappa = 0.8052 +- 0.0106
Best estimator:
	Fit time = 862.501s (+/- 9.378s)
	Predict time = 82.261s (+/- 1.348s)
	Memory size = 127.450 MB (+/- 0.871 MB)
Best estimator parameters:
	Estimator 1 = {'svc__C': 10, 'svc__gamma': 0.001}
	Estimator 2 = {'svc__C': 10, 'svc__gamma': 0.001}
	Estimator 3 = {'svc__C': 10, 'svc__gamma': 0.001}
	Estimator 4 = {'svc__C': 10, 'svc__gamma': 0.001}
	Estimator 5 = {'svc__C': 10, 'svc__gamma': 0.001}
Fit time:
	Fold 1 = 3421.995s
	Fold 2 = 3463.986s
	Fold 3 = 3495.311s
	Fold 4 = 3461.773s
	Fold 5 = 3480.566s
Total Time = 17323.635s

Model = Decision Tree
BAcc = 0.8789 +- 0.0095
F1 = 0.8800 +- 0.0114
Recall = 0.8836 +- 0.0191
Precision = 0.8767 +- 0.0099
Mcc = 0.7581 +- 0.0192
Kappa = 0.7578 +- 0.0192
Best estimator:
	Fit time = 5.072s (+/- 1.034s)
	Predict time = 0.072s (+/- 0.000s)
	Memory size = 0.126 MB (+/- 0.016 MB)
Best estimator parameters:
	Estimator 1 = {'dt__criterion': 'gini', 'dt__max_depth': 20, 'dt__splitter': 'random'}
	Estimator 2 = {'dt__criterion': 'gini', 'dt__max_depth': None, 'dt__splitter': 'random'}
	Estimator 3 = {'dt__criterion': 'entropy', 'dt__max_depth': 20, 'dt__splitter': 'random'}
	Estimator 4 = {'dt__criterion': 'entropy', 'dt__max_depth': None, 'dt__splitter': 'random'}
	Estimator 5 = {'dt__criterion': 'entropy', 'dt__max_depth': 50, 'dt__splitter': 'random'}
Fit time:
	Fold 1 = 35.898s
	Fold 2 = 37.389s
	Fold 3 = 33.344s
	Fold 4 = 34.490s
	Fold 5 = 29.323s
Total Time = 170.448s

Model = Random Forest
BAcc = 0.9175 +- 0.0062
F1 = 0.9173 +- 0.0061
Recall = 0.9097 +- 0.0070
Precision = 0.9251 +- 0.0057
Mcc = 0.8351 +- 0.0124
Kappa = 0.8350 +- 0.0124
Best estimator:
	Fit time = 36.442s (+/- 10.880s)
	Predict time = 0.257s (+/- 0.056s)
	Memory size = 22.236 MB (+/- 6.825 MB)
Best estimator parameters:
	Estimator 1 = {'rf__criterion': 'gini', 'rf__max_depth': 50, 'rf__n_estimators': 200}
	Estimator 2 = {'rf__criterion': 'gini', 'rf__max_depth': 50, 'rf__n_estimators': 100}
	Estimator 3 = {'rf__criterion': 'gini', 'rf__max_depth': 50, 'rf__n_estimators': 100}
	Estimator 4 = {'rf__criterion': 'gini', 'rf__max_depth': 50, 'rf__n_estimators': 200}
	Estimator 5 = {'rf__criterion': 'gini', 'rf__max_depth': None, 'rf__n_estimators': 200}
Fit time:
	Fold 1 = 144.152s
	Fold 2 = 98.545s
	Fold 3 = 99.635s
	Fold 4 = 145.321s
	Fold 5 = 144.365s
Total Time = 632.020s

Model = Extreme Random Forest
BAcc = 0.9270 +- 0.0055
F1 = 0.9269 +- 0.0052
Recall = 0.9201 +- 0.0071
Precision = 0.9339 +- 0.0037
Mcc = 0.8540 +- 0.0111
Kappa = 0.8539 +- 0.0111
Best estimator:
	Fit time = 25.220s (+/- 5.506s)
	Predict time = 0.347s (+/- 0.066s)
	Memory size = 54.045 MB (+/- 12.318 MB)
Best estimator parameters:
	Estimator 1 = {'erf__criterion': 'gini', 'erf__max_depth': 50, 'erf__n_estimators': 200}
	Estimator 2 = {'erf__criterion': 'entropy', 'erf__max_depth': 50, 'erf__n_estimators': 200}
	Estimator 3 = {'erf__criterion': 'entropy', 'erf__max_depth': 50, 'erf__n_estimators': 200}
	Estimator 4 = {'erf__criterion': 'entropy', 'erf__max_depth': None, 'erf__n_estimators': 100}
	Estimator 5 = {'erf__criterion': 'entropy', 'erf__max_depth': None, 'erf__n_estimators': 200}
Fit time:
	Fold 1 = 87.221s
	Fold 2 = 88.312s
	Fold 3 = 88.481s
	Fold 4 = 59.817s
	Fold 5 = 87.222s
Total Time = 411.055s

Model = Gradient Boosted Machine
BAcc = 0.9245 +- 0.0033
F1 = 0.9253 +- 0.0036
Recall = 0.9283 +- 0.0069
Precision = 0.9223 +- 0.0050
Mcc = 0.8491 +- 0.0066
Kappa = 0.8491 +- 0.0066
Best estimator:
	Fit time = 760.384s (+/- 2.879s)
	Predict time = 0.105s (+/- 0.005s)
	Memory size = 0.222 MB (+/- 0.002 MB)
Best estimator parameters:
	Estimator 1 = {'gbm__learning_rate': 1, 'gbm__loss': 'exponential', 'gbm__n_estimators': 200}
	Estimator 2 = {'gbm__learning_rate': 1, 'gbm__loss': 'exponential', 'gbm__n_estimators': 200}
	Estimator 3 = {'gbm__learning_rate': 1, 'gbm__loss': 'exponential', 'gbm__n_estimators': 200}
	Estimator 4 = {'gbm__learning_rate': 1, 'gbm__loss': 'exponential', 'gbm__n_estimators': 200}
	Estimator 5 = {'gbm__learning_rate': 1, 'gbm__loss': 'exponential', 'gbm__n_estimators': 200}
Fit time:
	Fold 1 = 2119.415s
	Fold 2 = 2128.860s
	Fold 3 = 2110.392s
	Fold 4 = 2106.951s
	Fold 5 = 2122.658s
Total Time = 10588.280s

Model = MultiLayer Perceptron
BAcc = 0.9146 +- 0.0064
F1 = 0.9147 +- 0.0064
Recall = 0.9091 +- 0.0147
Precision = 0.9206 +- 0.0111
Mcc = 0.8296 +- 0.0129
Kappa = 0.8292 +- 0.0130
Best estimator:
	Fit time = 135.808s (+/- 58.787s)
	Predict time = 0.230s (+/- 0.034s)
	Memory size = 13.161 MB (+/- 3.707 MB)
Best estimator parameters:
	Estimator 1 = {'mlp__activation': 'relu', 'mlp__alpha': 0.001, 'mlp__hidden_layer_sizes': (200, 100, 50), 'mlp__learning_rate_init': 0.001}
	Estimator 2 = {'mlp__activation': 'relu', 'mlp__alpha': 1e-05, 'mlp__hidden_layer_sizes': (500, 200, 100), 'mlp__learning_rate_init': 0.001}
	Estimator 3 = {'mlp__activation': 'relu', 'mlp__alpha': 0.001, 'mlp__hidden_layer_sizes': (500, 200, 100), 'mlp__learning_rate_init': 0.001}
	Estimator 4 = {'mlp__activation': 'relu', 'mlp__alpha': 0.0001, 'mlp__hidden_layer_sizes': (500, 200, 100), 'mlp__learning_rate_init': 0.001}
	Estimator 5 = {'mlp__activation': 'relu', 'mlp__alpha': 0.0001, 'mlp__hidden_layer_sizes': (500, 200, 100), 'mlp__learning_rate_init': 0.001}
Fit time:
	Fold 1 = 4304.246s
	Fold 2 = 2138.185s
	Fold 3 = 5234.197s
	Fold 4 = 2503.811s
	Fold 5 = 3179.664s
Total Time = 17360.109s

Model = AdaBoost
BAcc = 0.9221 +- 0.0060
F1 = 0.9229 +- 0.0063
Recall = 0.9267 +- 0.0105
Precision = 0.9192 +- 0.0029
Mcc = 0.8443 +- 0.0121
Kappa = 0.8443 +- 0.0120
Best estimator:
	Fit time = 1466.393s (+/- 4.275s)
	Predict time = 7.809s (+/- 0.045s)
	Memory size = 0.628 MB (+/- 0.000 MB)
Best estimator parameters:
	Estimator 1 = {'ab__learning_rate': 1, 'ab__n_estimators': 1000}
	Estimator 2 = {'ab__learning_rate': 1, 'ab__n_estimators': 1000}
	Estimator 3 = {'ab__learning_rate': 1, 'ab__n_estimators': 1000}
	Estimator 4 = {'ab__learning_rate': 1, 'ab__n_estimators': 1000}
	Estimator 5 = {'ab__learning_rate': 1, 'ab__n_estimators': 1000}
Fit time:
	Fold 1 = 4050.154s
	Fold 2 = 4073.289s
	Fold 3 = 4076.933s
	Fold 4 = 4059.832s
	Fold 5 = 4111.094s
Total Time = 20371.305s

Model = Gaussian Naive Bayes
BAcc = 0.6857 +- 0.0287
F1 = 0.7466 +- 0.0182
Recall = 0.9140 +- 0.0063
Precision = 0.6317 +- 0.0287
Mcc = 0.4177 +- 0.0485
Kappa = 0.3725 +- 0.0584
Best estimator:
	Fit time = 1.157s (+/- 0.049s)
	Predict time = 0.237s (+/- 0.007s)
	Memory size = 0.073 MB (+/- 0.000 MB)
Best estimator parameters:
	Estimator 1 = {'gnb__var_smoothing': 0.0017575106248547913}
	Estimator 2 = {'gnb__var_smoothing': 0.0026826957952797246}
	Estimator 3 = {'gnb__var_smoothing': 0.009540954763499934}
	Estimator 4 = {'gnb__var_smoothing': 0.014563484775012436}
	Estimator 5 = {'gnb__var_smoothing': 0.0517947467923121}
Fit time:
	Fold 1 = 13.612s
	Fold 2 = 9.410s
	Fold 3 = 9.217s
	Fold 4 = 9.339s
	Fold 5 = 9.535s
Total Time = 51.117s

Model = Extreme Learning Machine
BAcc = 0.8468 +- 0.0064
F1 = 0.8502 +- 0.0065
Recall = 0.8635 +- 0.0108
Precision = 0.8374 +- 0.0091
Mcc = 0.6942 +- 0.0128
Kappa = 0.6937 +- 0.0128
Best estimator:
	Fit time = 3.242s (+/- 0.170s)
	Predict time = 0.509s (+/- 0.034s)
	Memory size = 25.830 MB (+/- 0.000 MB)
Best estimator parameters:
	Estimator 1 = {'elm__alpha': 0.1, 'elm__n_neurons': 1000}
	Estimator 2 = {'elm__alpha': 0.001, 'elm__n_neurons': 1000}
	Estimator 3 = {'elm__alpha': 0.01, 'elm__n_neurons': 1000}
	Estimator 4 = {'elm__alpha': 0.01, 'elm__n_neurons': 1000}
	Estimator 5 = {'elm__alpha': 0.001, 'elm__n_neurons': 1000}
Fit time:
	Fold 1 = 14.135s
	Fold 2 = 13.517s
	Fold 3 = 14.151s
	Fold 4 = 12.593s
	Fold 5 = 12.348s
Total Time = 66.749s

Model = Ensemble Deep RVFL
BAcc = 0.8802 +- 0.0055
F1 = 0.8810 +- 0.0070
Recall = 0.8815 +- 0.0169
Precision = 0.8808 +- 0.0099
Mcc = 0.7607 +- 0.0114
Kappa = 0.7604 +- 0.0113
Best estimator:
	Fit time = 15.718s (+/- 4.709s)
	Predict time = 1.441s (+/- 0.429s)
	Memory size = 22.445 MB (+/- 10.070 MB)
Best estimator parameters:
	Estimator 1 = {'edrvfl__activation': 'sigmoid', 'edrvfl__n_layer': 5, 'edrvfl__n_nodes': 300}
	Estimator 2 = {'edrvfl__activation': 'relu', 'edrvfl__n_layer': 2, 'edrvfl__n_nodes': 80}
	Estimator 3 = {'edrvfl__activation': 'sigmoid', 'edrvfl__n_layer': 4, 'edrvfl__n_nodes': 300}
	Estimator 4 = {'edrvfl__activation': 'sigmoid', 'edrvfl__n_layer': 4, 'edrvfl__n_nodes': 300}
	Estimator 5 = {'edrvfl__activation': 'relu', 'edrvfl__n_layer': 5, 'edrvfl__n_nodes': 300}
Fit time:
	Fold 1 = 168.223s
	Fold 2 = 141.623s
	Fold 3 = 159.388s
	Fold 4 = 159.044s
	Fold 5 = 166.261s
Total Time = 794.544s

Model = LightGBM
BAcc = 0.9416 +- 0.0051
F1 = 0.9418 +- 0.0052
Recall = 0.9390 +- 0.0100
Precision = 0.9446 +- 0.0032
Mcc = 0.8833 +- 0.0102
Kappa = 0.8832 +- 0.0102
Best estimator:
	Fit time = 29.228s (+/- 20.261s)
	Predict time = 0.087s (+/- 0.011s)
	Memory size = 2.028 MB (+/- 1.118 MB)
Best estimator parameters:
	Estimator 1 = {'lgbm__max_depth': 12, 'lgbm__num_leaves': 50}
	Estimator 2 = {'lgbm__max_depth': 12, 'lgbm__num_leaves': 500}
	Estimator 3 = {'lgbm__max_depth': 12, 'lgbm__num_leaves': 50}
	Estimator 4 = {'lgbm__max_depth': 12, 'lgbm__num_leaves': 500}
	Estimator 5 = {'lgbm__max_depth': 12, 'lgbm__num_leaves': 500}
Fit time:
	Fold 1 = 160.220s
	Fold 2 = 247.399s
	Fold 3 = 109.496s
	Fold 4 = 138.421s
	Fold 5 = 195.787s
Total Time = 851.326s

Model = Skope Rules
BAcc = 0.7797 +- 0.0114
F1 = 0.8062 +- 0.0084
Recall = 0.9064 +- 0.0054
Precision = 0.7260 +- 0.0129
Mcc = 0.5789 +- 0.0201
Kappa = 0.5604 +- 0.0227
Best estimator:
	Fit time = 3366.311s (+/- 2105.946s)
	Predict time = 0.484s (+/- 0.036s)
	Memory size = 98.616 MB (+/- 73.280 MB)
Best estimator parameters:
	Estimator 1 = {'sr__max_depth_duplication': 2, 'sr__n_estimators': 1000}
	Estimator 2 = {'sr__max_depth_duplication': 2, 'sr__n_estimators': 200}
	Estimator 3 = {'sr__max_depth_duplication': 2, 'sr__n_estimators': 200}
	Estimator 4 = {'sr__max_depth_duplication': 2, 'sr__n_estimators': 500}
	Estimator 5 = {'sr__max_depth_duplication': 2, 'sr__n_estimators': 200}
Fit time:
	Fold 1 = 19082.297s
	Fold 2 = 9325.633s
	Fold 3 = 9785.933s
	Fold 4 = 15190.207s
	Fold 5 = 9665.246s
Total Time = 63049.320s

Model = GPLearn
BAcc = 0.7098 +- 0.0210
F1 = 0.7413 +- 0.0092
Recall = 0.8245 +- 0.0514
Precision = 0.6770 +- 0.0362
Mcc = 0.4352 +- 0.0334
Kappa = 0.4199 +- 0.0415
Best estimator:
	Fit time = 2921.642s (+/- 2907.533s)
	Predict time = 0.083s (+/- 0.020s)
	Memory size = 423.273 MB (+/- 283.716 MB)
Best estimator parameters:
	Estimator 1 = {'gpl__generations': 200, 'gpl__population_size': 10000, 'gpl__tournament_size': 200}
	Estimator 2 = {'gpl__generations': 200, 'gpl__population_size': 10000, 'gpl__tournament_size': 20}
	Estimator 3 = {'gpl__generations': 20, 'gpl__population_size': 10000, 'gpl__tournament_size': 200}
	Estimator 4 = {'gpl__generations': 50, 'gpl__population_size': 10000, 'gpl__tournament_size': 50}
	Estimator 5 = {'gpl__generations': 50, 'gpl__population_size': 10000, 'gpl__tournament_size': 200}
Fit time:
	Fold 1 = 18623.180s
	Fold 2 = 15494.885s
	Fold 3 = 5397.661s
	Fold 4 = 4599.489s
	Fold 5 = 5619.154s
Total Time = 49734.374s

Model = XGBoost
BAcc = 0.9424 +- 0.0025
F1 = 0.9427 +- 0.0025
Recall = 0.9419 +- 0.0053
Precision = 0.9436 +- 0.0029
Mcc = 0.8848 +- 0.0049
Kappa = 0.8848 +- 0.0050
Best estimator:
	Fit time = 62.944s (+/- 7.841s)
	Predict time = 0.117s (+/- 0.009s)
	Memory size = 0.852 MB (+/- 0.003 MB)
Best estimator parameters:
	Estimator 1 = {'xgb__eval_metric': 'error', 'xgb__max_depth': 6, 'xgb__n_estimators': 200, 'xgb__use_label_encoder': False}
	Estimator 2 = {'xgb__eval_metric': 'error', 'xgb__max_depth': 6, 'xgb__n_estimators': 200, 'xgb__use_label_encoder': False}
	Estimator 3 = {'xgb__eval_metric': 'error', 'xgb__max_depth': 6, 'xgb__n_estimators': 200, 'xgb__use_label_encoder': False}
	Estimator 4 = {'xgb__eval_metric': 'error', 'xgb__max_depth': 6, 'xgb__n_estimators': 200, 'xgb__use_label_encoder': False}
	Estimator 5 = {'xgb__eval_metric': 'error', 'xgb__max_depth': 6, 'xgb__n_estimators': 200, 'xgb__use_label_encoder': False}
Fit time:
	Fold 1 = 1971.305s
	Fold 2 = 2036.946s
	Fold 3 = 1957.751s
	Fold 4 = 1962.157s
	Fold 5 = 2083.952s
Total Time = 10012.116s

Model = Broad Learning System
BAcc = 0.8783 +- 0.0075
F1 = 0.8802 +- 0.0080
Recall = 0.8879 +- 0.0120
Precision = 0.8726 +- 0.0049
Mcc = 0.7569 +- 0.0152
Kappa = 0.7567 +- 0.0151
Best estimator:
	Fit time = 15.228s (+/- 1.559s)
	Predict time = 1.029s (+/- 0.173s)
	Memory size = 9.263 MB (+/- 0.000 MB)
Best estimator parameters:
	Estimator 1 = {'bls__C': 0.01, 'bls__N1': 50}
	Estimator 2 = {'bls__C': 0.01, 'bls__N1': 50}
	Estimator 3 = {'bls__C': 0.1, 'bls__N1': 50}
	Estimator 4 = {'bls__C': 0.0001, 'bls__N1': 50}
	Estimator 5 = {'bls__C': 0.1, 'bls__N1': 50}
Fit time:
	Fold 1 = 276.717s
	Fold 2 = 248.170s
	Fold 3 = 251.453s
	Fold 4 = 247.221s
	Fold 5 = 256.882s
Total Time = 1280.455s

Model = Stochastic Configuration Network
BAcc = 0.8759 +- 0.0051
F1 = 0.8767 +- 0.0054
Recall = 0.8767 +- 0.0078
Precision = 0.8767 +- 0.0070
Mcc = 0.7518 +- 0.0102
Kappa = 0.7518 +- 0.0102
Best estimator:
	Fit time = 0.826s (+/- 0.054s)
	Predict time = 0.388s (+/- 0.034s)
	Memory size = 18.189 MB (+/- 0.000 MB)
Best estimator parameters:
	Estimator 1 = {'scn__L_max': 1000, 'scn__T_max': 1000}
	Estimator 2 = {'scn__L_max': 1000, 'scn__T_max': 1000}
	Estimator 3 = {'scn__L_max': 1000, 'scn__T_max': 100}
	Estimator 4 = {'scn__L_max': 1000, 'scn__T_max': 100}
	Estimator 5 = {'scn__L_max': 1000, 'scn__T_max': 1000}
Fit time:
	Fold 1 = 10071.772s
	Fold 2 = 10071.029s
	Fold 3 = 8750.303s
	Fold 4 = 8529.114s
	Fold 5 = 9912.614s
Total Time = 47334.836s

Model = K-Nearest Neighbors
BAcc = 0.8953 +- 0.0043
F1 = 0.8970 +- 0.0041
Recall = 0.9054 +- 0.0056
Precision = 0.8887 +- 0.0037
Mcc = 0.7908 +- 0.0086
Kappa = 0.7906 +- 0.0085
Best estimator:
	Fit time = 0.824s (+/- 0.007s)
	Predict time = 194.981s (+/- 0.409s)
	Memory size = 145.448 MB (+/- 0.000 MB)
Best estimator parameters:
	Estimator 1 = {'knn__n_neighbors': 3, 'knn__p': 1, 'knn__weights': 'distance'}
	Estimator 2 = {'knn__n_neighbors': 1, 'knn__p': 1, 'knn__weights': 'uniform'}
	Estimator 3 = {'knn__n_neighbors': 3, 'knn__p': 1, 'knn__weights': 'distance'}
	Estimator 4 = {'knn__n_neighbors': 3, 'knn__p': 1, 'knn__weights': 'distance'}
	Estimator 5 = {'knn__n_neighbors': 1, 'knn__p': 1, 'knn__weights': 'uniform'}
Fit time:
	Fold 1 = 5563.203s
	Fold 2 = 5558.699s
	Fold 3 = 5534.270s
	Fold 4 = 5525.612s
	Fold 5 = 5555.008s
Total Time = 27736.796s

Full CV Time = 267827.912s
